// Generated by Sophon Schema. Do not edit manually!
import { SophonInstance, SenderCore } from '@sophonjs/server';


export interface Person {
  name: string;
  age: number;
}

// Services

export class MainServiceSender {
  constructor(private sender: SenderCore, private room: string) {}
  ping(n: number) {
    this.sender.emit(this.room, 'Main/ping', n);
  }
}

export abstract class AbstractMainService {
  readonly NAMESPACE = 'Main';
  static readonly SENDER = MainServiceSender;

  readonly $: (room: string) => MainServiceSender;

  abstract adder(x: number, y: number, ctx: SophonInstance): Promise<number>;
  abstract hello(p: Person, ctx: SophonInstance): Promise<string>;
}
